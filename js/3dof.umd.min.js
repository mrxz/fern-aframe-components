!function(t){"function"==typeof define&&define.amd?define(t):t()}((function(){"use strict";AFRAME.registerComponent("3dof",{schema:{position:{type:"vec3"},stereo:{default:!0}},init:function(){this.el.sceneEl.renderer.xr.cameraAutoUpdate=!1},tick:function(){const t=new THREE.Vector3,e=new THREE.Vector3,r=new THREE.Vector3;return function(){const o=this.el.sceneEl.renderer;if(!o.xr.isPresenting)return;t.copy(this.data.position);const i=o.xr.getCamera();o.xr.updateCamera(i),e.setFromMatrixPosition(i.matrixWorld),i.matrix.setPosition(t),i.matrixWorld.copy(i.matrix),i.matrixWorldInverse.copy(i.matrixWorld).invert();const n=this.el.sceneEl.camera.el.object3D;if(n.matrix.copy(i.matrix),n.matrix.decompose(n.position,n.quaternion,n.scale),this.data.stereo)for(const o of i.cameras)r.setFromMatrixPosition(o.matrix).sub(e).add(t),o.matrix.setPosition(r),o.matrixWorld.copy(o.matrix),o.matrixWorldInverse.copy(o.matrixWorld).invert();else for(const e of i.cameras)e.matrix.setPosition(t),e.matrixWorld.copy(e.matrix),e.matrixWorldInverse.copy(e.matrixWorld).invert()}}()})}));
